swagger: "2.0"
info:
  description: "This is a project data management system"
  version: "1.0.0"
  title: "Project Data Manager"
host: "localhost:8080"
basePath: "/api/v1"
schemes:
- "http"

paths:
  /projects:
    get:
      summary: "Returns all projects"
      responses:
        "200":
          description: "The list of projects"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Project"
    post:
      summary: "Adds a new project"
      parameters:
      - in: "body"
        name: "project"
        required: true
        schema:
          $ref: "#/definitions/Project"
      responses:
        "200":
          description: "Project correctly added"
        "404":
          description: "A project with this name already exists"
    patch:
      summary: "Updates a project"
      parameters:
      - in: "body"
        name: "project"
        required: true
        schema:
          $ref: "#/definitions/Project"
      responses:
        "200":
          description: "Project updated successfully"
        "404":
          description: "Invalid name"
  /projects/{projectName}:
    get:
      summary: "Returns a specific project"
      parameters:
      - in: "path"
        name: "projectName"
        type: "string"
        description: "The name of the project to get"
        required: true
      responses:
        "200":
          description: "The desired project"
          schema:
            $ref: "#/definitions/Project"
        "400":
          description: "Invalid name"
    delete:
      summary: "Deletes a project"
      parameters:
      - in: "path"
        name: "projectName"
        type: "string"
        description: "The name of the project to delete"
        required: true
      responses:
        "204":
          description: "The project has been deleted"
  /projects/{projectName}/test-data:
    get:
      summary: "Gets the test data entries of a project"
      parameters:
      - in: "path"
        name: "projectName"
        type: "string"
        description: "The name of the project"
        required: true
      responses:
        "404":
          description: "The project cannot be found"
        "200":
          description: "The list of test data entries"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TestDataEntry"
    post:
      summary: "Adds a new test data entry to the list"
      parameters:
      - in: "path"
        name: "projectName"
        required: true
        type: "string"
      - in: "body"
        name: "testDataEntry"
        required: true
        schema:
          $ref: "#/definitions/TestDataEntry"
      responses:
        "404":
          description: "The project cannot be found"
        "200":
          description: "Test data entry correctly added"
  /projects/{projectName}/test-data/{entryDate}:
    delete:
      summary: "Deletes a test data entry"
      parameters:
      - in: "path"
        name: "projectName"
        type: "string"
        description: "The name of the project where the test data entry is"
        required: true
      - in: "path"
        name: "entryDate"
        type: "string"
        description: "The date of entry of the test data entry"
        required: true
      responses:
        "404":
          description: "The project or entry cannot be found"
        "204":
          description: "The test data entry has been deleted"
  /projects/{projectName}/fft-data:
    get:
      summary: "Gets the FFT data entries of a project"
      parameters:
      - in: "path"
        name: "projectName"
        type: "string"
        description: "The name of the project"
        required: true
      responses:
        "404":
          description: "The project cannot be found"
        "200":
          description: "The list of fft data entries"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/FftDataEntry"
    post:
      summary: "Adds a new FFT data entry to the list"
      parameters:
      - in: "path"
        name: "projectName"
        required: true
        type: "string"
      - in: "body"
        name: "fftDataEntry"
        required: true
        schema:
          $ref: "#/definitions/FftDataEntry"
      responses:
        "404":
          description: "The project cannot be found"
        "200":
          description: "Test data entry correctly added"
  /projects/{projectName}/fft-data/{entryDate}:
    delete:
      summary: "Deletes an FFT data entry"
      parameters:
      - in: "path"
        name: "projectName"
        type: "string"
        description: "The name of the project where the FFT data entry is"
        required: true
      - in: "path"
        name: "entryDate"
        type: "string"
        description: "The date of entry of the FFT data entry"
        required: true
      responses:
        "404":
          description: "The project or entry cannot be found"
        "204":
          description: "The FFT data entry has been deleted"
  /projects/{projectName}/bug-data:
    get:
      summary: "Gets the bug data entries of a project"
      parameters:
      - in: "path"
        name: "projectName"
        type: "string"
        description: "The name of the project"
        required: true
      responses:
        "404":
          description: "The project cannot be found"
        "200":
          description: "The list of bug data entries"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BugDataEntry"
    post:
      summary: "Adds a new bug data entry to the list"
      parameters:
      - in: "path"
        name: "projectName"
        required: true
        type: "string"
      - in: "body"
        name: "bugDataEntry"
        required: true
        schema:
          $ref: "#/definitions/BugDataEntry"
      responses:
        "404":
          description: "The project cannot be found"
        "200":
          description: "Bug data entry correctly added"
  /projects/{projectName}/bug-data/{entryDate}:
    delete:
      summary: "Deletes a bug data entry"
      parameters:
      - in: "path"
        name: "projectName"
        type: "string"
        description: "The name of the project where the bug data entry is"
        required: true
      - in: "path"
        name: "entryDate"
        type: "string"
        description: "The date of entry of the bug data entry"
        required: true
      responses:
        "404":
          description: "The project or entry cannot be found"
        "204":
          description: "The data entry has been deleted"

definitions:
  Project:
    type: "object"
    properties:
      name:
        type: "string"
      nittanyUrl:
        type: "string"
      fftDeadline:
        type: "string"
      releaseName:
        type: "string"
      fftStatus:
        type: "string"
        enum:
          - UNDEFINED
          - ON_HOLD
          - INCOMPLETE
          - CRITICAL
          - BEHIND
          - ON_TRACK
          - AHEAD
          - COMPLETED
      svApproved:
        type: "boolean"
      componentsList:
        type: "array"
        items: 
          type: "string"
      testData:
        type: "array"
        items:
          $ref: "#/definitions/TestDataEntry"
      fftData:
        type: "array"
        items:
          $ref: "#/definitions/FftDataEntry"
      bugData:
        type: "array"
        items:
          $ref: "#/definitions/BugDataEntry"
  FftDataEntry:
    type: "object"
    properties:
      dataEntryId:
        $ref: "#/definitions/DataEntryId"
      testsLeft:
        type: "integer"
  TestDataEntry:
    type: "object"
    properties:
      dataEntryId:
        $ref: "#/definitions/DataEntryId"
      testsPassed:
        type: "integer"
      testsFailed:
        type: "integer"
      testsBlocked:
        type: "integer"
      testsNoRun:
        type: "integer"
      testsNotCompleted:
        type: "integer"
      totalTests:
        type: "integer"
      target95:
        type: "integer"
      leftToTarget95:
        type: "integer"
  BugDataEntry:
    type: "object"
    properties:
      dataEntryId:
        $ref: "#/definitions/DataEntryId"
      openBlockerBugs:
        type: "integer"
      openCriticalBugs:
        type: "integer"
      openMajorBugs:
        type: "integer"
      openMinorBugs:
        type: "integer"
      openTrivialBugs:
        type: "integer"
      fixedBlockerBugs:
        type: "integer"
      fixedCriticalBugs:
        type: "integer"
      fixedMajorBugs:
        type: "integer"
      fixedMinorBugs:
        type: "integer"
      fixedTrivialBugs:
        type: "integer"
  DataEntryId:
    type: "object"
    properties:
      projectName:
        type: "string"
      entryDate:
        type: "string"